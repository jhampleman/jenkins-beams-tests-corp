<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="RUN_Exede_Zip_Test" time="25.315" tests="10" failures="0" errors="0">
   <testsuite name="RUN_Exede_Zip_Test" tests="10" failures="0" errors="0" time="25.315" timestamp="2020-02-07 15:03:01" hostname="jhampleman - lp-jhamplem-osx.hq.corp.viasat.com" id="Test Suites/RUN_Exede_Zip_Test">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259"/>
         <property name="logFiles" value="/Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="jhampleman - lp-jhamplem-osx.hq.corp.viasat.com"/>
         <property name="hostAddress" value="172.30.158.6"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="7.2.1.1"/>
      </properties>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="4.272" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:01 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:01 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:01 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:01 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 65 zip 58438 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:02 - [MESSAGE][WARNING] - beam 65 zip 58438 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:02 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:05 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/0.har

2020-02-07 15:03:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:05 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:05 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:05 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.095" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:05 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 65 zip 56740 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:05 - [MESSAGE][WARNING] - beam 65 zip 56740 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:05 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:07 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/1.har

2020-02-07 15:03:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:07 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:07 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:07 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.233" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:07 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 67 zip 49916 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:07 - [MESSAGE][WARNING] - beam 67 zip 49916 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:07 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:08 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:08 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:09 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/2.har

2020-02-07 15:03:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:10 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:10 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:10 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="3.065" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:10 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 79 zip 04763 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:10 - [MESSAGE][WARNING] - beam 79 zip 04763 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:10 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:13 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/3.har

2020-02-07 15:03:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:13 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:13 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:13 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.943" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:13 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 95 zip 33040 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:13 - [MESSAGE][WARNING] - beam 95 zip 33040 upfront fees 0 plan Augmented Standard Plan

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:13 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:16 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/4.har

2020-02-07 15:03:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:16 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:16 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:16 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.059" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:16 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 301 zip 55806 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:16 - [MESSAGE][WARNING] - beam 301 zip 55806 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:16 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:18 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/5.har

2020-02-07 15:03:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:18 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:18 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:18 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.251" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:18 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 302 zip 56440 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:18 - [MESSAGE][WARNING] - beam 302 zip 56440 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:18 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:20 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/6.har

2020-02-07 15:03:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:20 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:20 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:20 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="2.019" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:20 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 303 zip 54701 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:20 - [MESSAGE][WARNING] - beam 303 zip 54701 upfront fees 0 plan VS2 Standard Offer

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:20 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:22 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/7.har

2020-02-07 15:03:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:22 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:22 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:22 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="1.956" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:22 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 304 zip 54124 upfront fees 0 plan Liberty 12/25/50/Unlimited

2020-02-07 15:03:22 - [MESSAGE][WARNING] - beam 304 zip 54124 upfront fees 0 plan Liberty 12/25/50/Unlimited

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:22 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:24 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/8.har

2020-02-07 15:03:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:24 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:24 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:24 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Test_Beams_by_Zip_to_Excel" time="1.886" classname="Test Cases/Test_Beams_by_Zip_to_Excel" status="PASSED">
         <system-out><![CDATA[2020-02-07 15:03:24 - [TEST_CASE][PASSED] - Test Cases/Test_Beams_by_Zip_to_Excel: Test Cases/Test_Beams_by_Zip_to_Excel

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - excelFile01 = "beams-test-results.xlsx": null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - ExpectedListSheetFile1 = ["Sheet1"]: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - workbookFile01 = getWorkbook(excelFile01): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - workbook01 = getWorkbook(excelFile01): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - sheet01 = getExcelSheet(workbook01, "Sheet1"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A1", "TEST"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B1", "BEAM"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C1", "UFF"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D1", "PLAN"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E1", "API PLAN"): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - mybeam = mybeam: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - myuff = myuff: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - myplan = myplan: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - log.logWarning("beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): beam 711 zip 80403 upfront fees 0 plan END

2020-02-07 15:03:24 - [MESSAGE][WARNING] - beam 711 zip 80403 upfront fees 0 plan END

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "B" + mycount, beamFail): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "C" + mycount, uffFail): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - mycount = mycount + 1: null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "A" + mycount, "beam " + mybeam + " zip " + myzip + " upfront fees " + myuff + " plan " + myplan): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "D" + mycount, myplan): null

2020-02-07 15:03:24 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Exede_Zip", ["myzip":myzip])): Send request and verify the response successfully

2020-02-07 15:03:26 - [MESSAGE][INFO] - HAR: /Users/jhampleman/Katalon Studio/Exede_Beam_Tests_v2.1 copy/Reports/20200207_150259/RUN_Exede_Zip_Test/20200207_150259/requests/main/9.har

2020-02-07 15:03:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.beam", mybeam))): Verify element property value successfully

2020-02-07 15:03:26 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - beamFail = "P": null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - if (!(verifyElementPropertyValue(response, "data.product.down", myuff))): Verify element property value successfully

2020-02-07 15:03:26 - [MESSAGE][PASSED] - Verify element property value successfully

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - else: null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - uffFail = "P": null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - object = jsonSlurper.parseText(response.getResponseText()): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - println(object): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - mytest = plans: null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - variable = mytest: null

2020-02-07 15:03:26 - [MESSAGE][PASSED] - Verify response successfully

2020-02-07 15:03:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - setValueToCellByAddress(sheet01, "E" + mycount, variable): null

2020-02-07 15:03:26 - [TEST_STEP][PASSED] - saveWorkbook(excelFile01, workbook01): null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-02-07 15:03:01 - [TEST_SUITE][PASSED] - RUN_Exede_Zip_Test: Test Cases/Test_Beams_by_Zip_to_Excel]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
